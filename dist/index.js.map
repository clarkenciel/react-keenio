{"version":3,"sources":["../src/index.js"],"names":["Chart","props","initChart","bind","_chart","Keen","Dataviz","el","_chartRef","chartType","title","library","height","width","colors","colorMapping","chartOptions","prepare","client","run","query","err","res","error","message","customParse","customFunction","data","parseRawData","Array","result","labelMapping","labels","render","c","Component","propTypes","PropTypes","object","isRequired","string","number","array","func","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React, {\n  Component\n} from \"react\";\n\nimport keen from \"keen-js\";\n\nexport default class Chart extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.initChart = this.initChart.bind(this);\n  }\n\n  initChart() {\n    this._chart = new Keen.Dataviz()\n      .el(this._chartRef)\n      .chartType(this.props.chartType)\n      .title(this.props.title)\n      .library(this.props.library)\n      .height(this.props.height)\n      .width(this.props.width)\n      .colors(this.props.colors)\n      .colorMapping(this.props.colorMapping)\n      .chartOptions(this.props.chartOptions)\n      .prepare();\n  }\n  componentDidMount(){\n    this.initChart();\n    this.props.client.run(this.props.query, (err, res) => {\n      if (err) {\n        // Display the API error\n        this._chart.error(err.message);\n      }\n      else {\n        const customParse = this.props.customFunction;\n        let data = res;\n\n        // Handle the response\n        if (customParse) {\n          data = customParse(data);\n        }\n\n\t// make sure that we're passing an object with a result\n\t// key into parseRawData\t\n        this._chart\n          .parseRawData(data instanceof Array ? { result: data } : data)\n          .labelMapping(this.props.labelMapping)\n          .labels(this.props.labels)\n          .render();\n      }\n    });\n  }\n\n  render(){\n    return(<div ref={(c) => this._chartRef = c}></div>);\n  }\n\n}\n\nChart.propTypes = {\n  client: React.PropTypes.object.isRequired,\n  query: React.PropTypes.object.isRequired,\n  chartType: React.PropTypes.string.isRequired,\n  title: React.PropTypes.string,\n  library: React.PropTypes.string,\n  height: React.PropTypes.number,\n  width: React.PropTypes.number,\n  colors: React.PropTypes.array,\n  colorMapping: React.PropTypes.object,\n  labelMapping: React.PropTypes.object,\n  labels: React.PropTypes.array,\n  chartOptions: React.PropTypes.object,\n  customFunction: React.PropTypes.func,\n};\n\nChart.defaultProps = {\n  title: \"\",\n  library: \"\",\n  height: 400,\n  width: 600,\n  colors: [],\n  colorMapping: {},\n  labelMapping: {},\n  labels: [],\n  chartOptions: {},\n};\n"]}